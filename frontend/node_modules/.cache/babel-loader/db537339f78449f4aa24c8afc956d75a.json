{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDetailsReducer, productListReducer } from \"./Reducers/ProductReducers\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './Reducers/userReducers';\nimport cartReducer from \"./Reducers/CartReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cart: cartReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItem\") ? JSON.parse(localStorage.getItem(\"cartItem\")) : []; //login\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/hadha men fadh rabi/Desktop/Full stack prject/frontend/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","cartReducer","reducer","productList","productDetails","userLogin","userRegister","userDetails","userUpdateProfile","cart","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,mBAA/C,EAAoEC,wBAApE,QAAmG,yBAAnG;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAGA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAC5BY,EAAAA,WAAW,EAAEP,kBADe;AAE5BQ,EAAAA,cAAc,EAAET,qBAFY;AAG5BU,EAAAA,SAAS,EAAEP,gBAHiB;AAI5BQ,EAAAA,YAAY,EAAEP,mBAJc;AAK5BQ,EAAAA,WAAW,EAAEV,kBALe;AAM5BW,EAAAA,iBAAiB,EAAER,wBANS;AAO5BS,EAAAA,IAAI,EAAER;AAPsB,CAAD,CAA/B;AAUA,MAAMS,yBAAyB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADgC,GAEhC,EAFF,C,CAKA;;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD2B,GAE3B,IAFN;AAKA,MAAMI,YAAY,GAAG;AACjBP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,SAAS,EAAEP;AADT,GADW;AAIjBL,EAAAA,SAAS,EAAE;AACPa,IAAAA,QAAQ,EAAEH;AADH;AAJM,CAArB;AASA,MAAMI,UAAU,GAAG,CAAC1B,KAAD,CAAnB;AAEA,MAAM2B,KAAK,GAAG9B,WAAW,CACrBY,OADqB,EAErBc,YAFqB,EAGrBtB,mBAAmB,CAACF,eAAe,CAAC,GAAG2B,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { productDetailsReducer, productListReducer } from \"./Reducers/ProductReducers\";\r\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer} from './Reducers/userReducers';\r\nimport cartReducer from \"./Reducers/CartReducers\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    cart: cartReducer,\r\n});\r\n\r\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItem\")\r\n? JSON.parse(localStorage.getItem(\"cartItem\"))\r\n: []\r\n\r\n\r\n//login\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : null;\r\n\r\n\r\nconst initialState = {\r\n    cart :{\r\n        cartItems: cartItemsFromLocalStorage,\r\n    },\r\n    userLogin: {\r\n        userInfo: userInfoFromLocalStorage,\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}