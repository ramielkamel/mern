{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from './../Constants/OrderConstants';\nimport axios from 'axios';\nimport { CART_CLEAR_ITEMS } from '../Constants/CartConstants';\nimport { ORDER_CREATE_FAIL } from './../Constants/OrderConstants';\nimport { logout } from './userActions'; //Create Order\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"Application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not Authorized! Token Failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; // Order details\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"orderDetails\", JSON.stringify(getState().order.orderDetails));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not Authorized! Token Failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hadha men fadh rabi/Desktop/Full stack prject/frontend/src/Redux/Actions/OrderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","axios","CART_CLEAR_ITEMS","ORDER_CREATE_FAIL","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","setItem","JSON","stringify","orderDetails"],"mappings":"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","sourcesContent":["\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from './../Constants/OrderConstants';\r\nimport  axios  from 'axios';\r\nimport { CART_CLEAR_ITEMS } from '../Constants/CartConstants';\r\nimport { ORDER_CREATE_FAIL } from './../Constants/OrderConstants';\r\nimport {  logout } from './userActions';\r\n\r\n\r\n//Create Order\r\nexport const createOrder = (order) => async (dispatch,getState) => {\r\n    try{\r\n        dispatch({type: ORDER_CREATE_REQUEST});\r\n        \r\n        const {\r\n            userLogin: { userInfo }, } = getState();\r\n            \r\n            \r\n        const  config = {\r\n            headers : {\r\n                \"Content-type\":\"Application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data});\r\n        dispatch({ type: CART_CLEAR_ITEMS, payload: data});\r\n\r\n        localStorage.removeItem(\"cartItems\");\r\n\r\n\r\n\r\n\r\n    }catch (error){\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        if (message === \"Not Authorized! Token Failed\")  {\r\n            dispatch(logout());\r\n        } \r\n        dispatch({type: ORDER_CREATE_FAIL, payload: message});\r\n        \r\n    }\r\n};\r\n\r\n\r\n// Order details\r\nexport const getOrderDetails = (id) => async (dispatch,getState) => {\r\n    try{\r\n        dispatch({type: ORDER_DETAILS_REQUEST});\r\n        \r\n        const {\r\n            userLogin: { userInfo }, } = getState();\r\n            \r\n            \r\n        const  config = {\r\n            headers : {\r\n                \r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`,  config);\r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data});\r\n        localStorage.setItem(\"orderDetails\", JSON.stringify(getState().order.orderDetails));\r\n\r\n        \r\n\r\n\r\n\r\n    }catch (error){\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        if (message === \"Not Authorized! Token Failed\")  {\r\n            dispatch(logout());\r\n        } \r\n        dispatch({type: ORDER_DETAILS_FAIL , payload: message});\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}