{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from './../Constants/UserConstants';\nimport axios from 'axios'; //Login\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Logout\n\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  document.location.href = \"/login\";\n}; //Register\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //User Details\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not Authorized! Token Failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; //update profile \n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"Application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not Authorized! Token Failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hadha men fadh rabi/Desktop/Full stack prject/frontend/src/Redux/Actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["\r\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from './../Constants/UserConstants';\r\nimport axios from 'axios';\r\n\r\n\r\n//Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/users/login`,\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    document.location.href = \"/login\";\r\n}\r\n\r\n\r\n//Register\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/users`,\r\n            {name,  email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n//User Details\r\nexport const getUserDetails = (id) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST });\r\n        const { userLogin: {userInfo}, } = getState()\r\n        \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =  error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        :error.message;\r\n        if (message === \"Not Authorized! Token Failed\") {\r\n            dispatch(logout());\r\n        }\r\n    \r\n\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\n//update profile \r\nexport const updateUserProfile = (user) => async (dispatch,getState) => {\r\n    try{\r\n        dispatch({type: USER_UPDATE_PROFILE_REQUEST});\r\n        \r\n        const {\r\n            userLogin: { userInfo }, } = getState();\r\n            \r\n            \r\n        const  config = {\r\n            headers : {\r\n                \"Content-type\":\"Application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data});\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    }catch (error){\r\n        const message = \r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n\r\n        if (message === \"Not Authorized! Token Failed\")  {\r\n            dispatch(logout());\r\n        } \r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: message});\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}